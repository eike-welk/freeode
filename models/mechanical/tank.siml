############################################################################
#    Copyright (C) 2006 by Eike Welk                                       #
#    eike.welk@post.rwth-aachen.de                                         #
#                                                                          #
#    License: GPL                                                          #
#                                                                          #
#    This program is free software; you can redistribute it and#or modify  #
#    it under the terms of the GNU General Public License as published by  #
#    the Free Software Foundation; either version 2 of the License, or     #
#    (at your option) any later version.                                   #
#                                                                          #
#    This program is distributed in the hope that it will be useful,       #
#    but WITHOUT ANY WARRANTY; without even the implied warranty of        #
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #
#    GNU General Public License for more details.                          #
#                                                                          #
#    You should have received a copy of the GNU General Public License     #
#    along with this program; if not, write to the                         #
#    Free Software Foundation, Inc.,                                       #
#    59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #
############################################################################


class Tank(Model):
    data V, h, qOut0, qOut1: Real;
    data A_bott, Ao, h1, mu, qIn, g: Real parameter;

    func dynamic():
        h = V/A_bott;
        qOut0 = mu*Ao*sqrt(2*g*h); #hole in bottom
        if h > h1:
            qOut1 = mu*Ao*sqrt(2*g*(h-h1)); #hole at height h1
        else:
            qOut1 = 0;
        end
        $V = qIn - qOut0 - qOut1;
        #print 'h: ', h, 'time: ', time;
    end

    func init():
        V = 0;
        A_bott = 1.2;
        Ao = 0.02;
        h1 = 0.5;
        mu = 0.55;
        qIn = 0.05;
    end
end


class FillTank(Process):
    data t: Tank;
    data g: Real parameter;

    func dynamic():
        call t.dynamic();
    end
    func init():
        g = 9.81;
        call t.init();
        solutionParameters.simulationTime = 150;
        solutionParameters.reportingInterval = 1;
    end
    func final():
        save 'fill-tank';
        graph t.V, t.h, t.qOut0, t.qOut1;
    end
end

