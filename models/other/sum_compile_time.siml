#    Copyright (C) 2009 by Eike Welk
#    eike.welk@post.rwth-aachen.de



#-----------------------------------------------------------------------------
#          Do computations at compile time
#
#  Sum sequence n, n-1, ... 3, 2, 1
#-----------------------------------------------------------------------------

#Sum the decreasing sequence
#   n, n-1, ... 3, 2, 1
#using a recursive algorithm.
func sum_recursive_321(n):
    cif n == 1:
        return 1
    else:
        return n + sum_recursive_321(n - 1)


#Compute the sum of the decreasing sequence
#   n, n-1, ... 3, 2, 1
#with a formula.
func compute_sum_321(n):
        return (n**2 + n)/2


printc('Sum sequence: n* ... +3+2+1')

data n: Float
n = 10 #70 #At 98 Python's maximum recursion limit is exeeded.
printc('n = ', n)
data sum_10_r, sum_10_c: Float const
sum_10_r = sum_recursive_321(n)
sum_10_c = compute_sum_321(n)
printc('Recursive sum:  ', sum_10_r)
printc('Closed formula: ', sum_10_c)
