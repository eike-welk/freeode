#    Copyright (C) 2009 by Eike Welk
#    eike.welk@post.rwth-aachen.de



#-----------------------------------------------------------------------------
#          Do computations at compile time
#
#  Compute the Fibonacci sequence at compile time
#-----------------------------------------------------------------------------

#TODO: implement in Python for speed comparison

#Compute Fibonacci numbers recursively
func fibo_r(n):
    cif n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibo_r(n-1) + fibo_r(n-2)


#Compute Fibonacci numbers with closed solution
func fibo_c(n):
        data phi: Float
        phi = (1 + sqrt(5))/2
        return (phi**n - (1 - phi)**n)/sqrt(5)



data n: Float
n = 10
printc('Compute the Fibonacci number:', n)
data fib_r, fib_c: Float
fib_r = fibo_r(n)  #fibo_x(10) == 55
fib_c = fibo_c(n)
printc('Recursive algorithm: ', fib_r)
printc('Closed solution:     ', fib_c)



#print series of Fibonacci numbers
func print_fibo_series(n):
    data fib: Float
    #first compute and print the lower numbers
    cif n > 0:
        print_fibo_series(n-1)
    #then print the current number
    fib = fibo_r(n)
    printc(n, ': ', fib)


printc('The Fibonacci series:')
print_fibo_series(15) #610